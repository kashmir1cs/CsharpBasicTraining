using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
/*
 * 비트 연산자 : >>, <<, &, |, ^, ~ (2진수로 변환)
 */
namespace CsharpBasicChaptor03_04
{
    class Program
    {
        static void Main(string[] args)
        {
            int x = 61; //2진수 메모리 기록된 값 : 0000 0000 0000 0000 0000 0000 0011 1101 (2)
            int y = 55; //2진수 메모리 기록된 값: 0000 0000 0000 0000 0000 0000 0011 0111 (2)
            Console.WriteLine(x << 2); // 2진수로 변환후 2bit 이동 (좌측으로)
            /*0000 0000 0000 0000 0000 0000 0011 1101 (2) 
             * ->
             * 00 0000 0000 0000 0000 0000 0011 1101 00(2) 
             * 128 + 64 + 32 + 16 +4 = 244 (61*2*2 = 244)
            */

            Console.WriteLine(x << 3); // 61*2*2*2 = 488
            Console.WriteLine(x >> 1); // 우측으로 이동, 61/(2) = 30 (소수점 삭제)
            // Formatting (진법으로 변환)
            // 16진수로 출력
            Console.WriteLine(" {0:X8} {1:X8}", x, y); // 16진수로 표현


            // 2진수 상태에서 비교 - 0은 거짓 1은 참
            // x : 0000 0000 0000 0000 0000 0000 0011 1101 (2)
            // y : 0000 0000 0000 0000 0000 0000 0011 0111 (2)
            Console.WriteLine(x & y);// 53 출력
            // & : 0000 0000 0000 0000 0000 0000 0011 0101 (2) : & 연산결과 - 둘다 1일 때만 1출력
            Console.WriteLine(x | y);// 63 출력
            // | : 0000 0000 0000 0000 0000 0000 0011 1111 (2) : | 연산결과 - 하나만 1일 경우에도 1출력
            Console.WriteLine(x | y);// 63 출력
            // 배타적논리합, Exclusive or (두개가 다른경우에 1출력)
            // ^ : 0000 0000 0000 0000 0000 0000 0011 1010 (2) : | 연산결과 - 하나만 1일 경우에도 1출력
            Console.WriteLine(x ^ y);// 10 출력
            // ~ : 이진수값 반전
            //~x : 1111 1111 1111 1111 1111 1111 1100 0010 (2) :음수값 
            // 1의 보수법, 2의 보수법, 음수표현 방식
            // 1의 보수법 
            // x : 0000 0000 0000 0000 0000 0000 0011 1101 (2) + 1(2)
            //  => 0000 0000 0000 0000 0000 0000 0011 1110 (2) = 62
            // 숫자반전 : 1111 1111 1111 1111 1111 1111 1100 0010 (2) :음수값 -62
            Console.WriteLine(~x);// -62 출력
        }
    }
}
